{"version":3,"sources":["serviceWorker.js","components/CardStyle.js","components/HomeStyle.js","components/Card.js","components/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","CardContainer","styled","div","_templateObject","ImageContainer","_templateObject2","TextContainer","_templateObject3","Text","p","_templateObject4","Container","HomeStyle_templateObject","SearchDiv","HomeStyle_templateObject2","ResultWrapper","HomeStyle_templateObject3","ResultDiv","HomeStyle_templateObject4","Link","a","_templateObject5","LoadingDiv","_templateObject6","Image","img","_templateObject7","props","theme","height","width","Carda","_ref","_ref$book","book","title","authors","thumbnail","imageLinks","publisher","infoLink","react_default","createElement","Fragment","src","map","author","target","href","Search","Input","Home","Card","Meta","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","isEmpty","updateEmpty","_useState5","_useState6","books","updateBooks","_useState7","_useState8","isLoading","setLoading","_handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","res","items","wrap","_context","prev","next","abrupt","fetch","concat","process","sent","json","t0","stop","apply","this","arguments","placeholder","onSearch","_x","handleSubmit","size","style","enterButton","alt","i","volumeInfo","key","ReactDOM","render","components_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35eeed82.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport const CardContainer = styled.div`\r\n  border: 1px solid black;\r\n  height: 105%;\r\n  width: 35%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 5px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 2%;\r\n  box-shadow: 4px 2px;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  height: 90%;\r\n  width: 31%;\r\n  margin-right:7px;\r\n  position: relative;\r\n  bottom: 40px;\r\n\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  height: 100%;\r\n  width: 69%;\r\n`;\r\n\r\nexport const Text = styled.p``;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const SearchDiv = styled.div`\r\n  height: 30%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ResultWrapper = styled.div`\r\n  height: 85%;\r\n  padding: 1%;\r\n`;\r\n \r\nexport const ResultDiv = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  background-color: #40a9ff;\r\n  color: white;\r\n  padding: 10px 21px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  border-radius: 15%;\r\n`;\r\n\r\nexport const LoadingDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: ${props => props.theme.height};\r\n  width: ${props => props.theme.width};\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  CardContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  Text\r\n} from \"./CardStyle\";\r\nimport { Image, Link } from \"./HomeStyle\";\r\n\r\nconst Carda = ({book:{title, authors, imageLinks:{thumbnail}, publisher, infoLink}}) => {\r\n //console.log(thumbnail)\r\n \r\n\r\n  return (\r\n    <>\r\n      <CardContainer>\r\n        <ImageContainer>\r\n          <Image src={thumbnail} />\r\n        </ImageContainer>\r\n        <TextContainer>\r\n          <Text>\r\n            <b>{title}</b>\r\n          </Text>\r\n         <Text><b>By:</b>{authors && authors.map(author=>author)}</Text>\r\n          <Text><b>Published by:</b>{publisher}</Text>\r\n          <Link target=\"_blank\" href={infoLink}>See this book.</Link>\r\n        </TextContainer>\r\n      </CardContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Carda;\r\n\r\n//title\r\n//author\r\n//published by\r\n//link to google book\r\n//link to image\r\n","import React, { useState } from \"react\";\r\n\r\nimport Carda from './Card'\r\n\r\nimport {\r\n  Container,\r\n  SearchDiv,\r\n  ResultWrapper,\r\n  ResultDiv,\r\n  Link,\r\n  LoadingDiv,\r\n  Image\r\n} from \"./HomeStyle\";\r\n\r\nimport { Input, Card } from \"antd\";\r\n\r\nconst Search = Input.Search;\r\nconst { Meta } = Card;\r\n\r\nconst Home = () => {\r\n  const [value, setValue] = useState(\r\n    \"Error: Please provide a search query first\"\r\n  );\r\n  const [isEmpty, updateEmpty] = useState(false);\r\n  const [books, updateBooks] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  async function handleSubmit(value) {\r\n    if (!value) {\r\n      updateEmpty(true);\r\n      return;\r\n      // updateBooks([]);\r\n    } else {\r\n      setLoading(true);\r\n      updateEmpty(false);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          `https://www.googleapis.com/books/v1/volumes?q=${value}&key=${\r\n            process.env.REACT_APP_GOOGLE_API_KEY\r\n          }`\r\n        );\r\n        setLoading(false);\r\n        const { items } = await res.json();\r\n\r\n        updateBooks(items);\r\n      } catch (e) {\r\n        setValue(\"something went wrong, please refresh\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SearchDiv>\r\n        <h2>BOOK FINDER</h2>\r\n\r\n        <Search\r\n          placeholder=\"input book title or author...\"\r\n          onSearch={value => handleSubmit(value)}\r\n          size=\"large\"\r\n          style={{ width: \"60%\" }}\r\n          enterButton=\"Search\"\r\n        />\r\n      </SearchDiv>\r\n\r\n      <ResultWrapper>\r\n        {isEmpty && <h3>{value}</h3>}\r\n        {isLoading && (\r\n          <LoadingDiv>\r\n            {\" \"}\r\n            <Image\r\n              height=\"50%\"\r\n              width=\"50%\"\r\n              src=\"https://media.giphy.com/media/11FuEnXyGsXFba/giphy.gif\"\r\n              alt=\"loadind gif\"\r\n            />{\" \"}\r\n          </LoadingDiv>\r\n        )}\r\n        {!isLoading && (\r\n          <ResultDiv>\r\n            {books &&\r\n              books.map((book, i) => (\r\n                <Carda\r\n                book={book.volumeInfo||null}\r\n                key={i}\r\n                \r\n                />\r\n                // <Card\r\n                //   key={i}\r\n                //   hoverable\r\n                //   style={{ width: 240, padding: \"5px\" }}\r\n                //   cover={\r\n                //     <img\r\n                //       alt={book.volumeInfo && book.volumeInfo.title}\r\n                //       src={\r\n                //         book.volumeInfo.imageLinks &&\r\n                //         book.volumeInfo.imageLinks.thumbnail\r\n                //       }\r\n                //     />\r\n                //   }\r\n                // >\r\n                //   <Meta\r\n                //     title={`${book.volumeInfo && book.volumeInfo.title}`}\r\n                //     description={`Author: ${book.volumeInfo.authors &&\r\n                //       book.volumeInfo.authors.map(elem => elem)}`}\r\n                //   />\r\n                //   <p>\r\n                //     Published by: {book.volumeInfo && book.volumeInfo.publisher}\r\n                //   </p>\r\n                //   <Link\r\n                //     target=\"_blank\"\r\n                //     href={book.volumeInfo && book.volumeInfo.infoLink}\r\n                //   >\r\n                //     Click\r\n                //   </Link>\r\n                // </Card>\r\n              ))}\r\n          </ResultDiv>\r\n        )}\r\n      </ResultWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Home from \"./components/Home\";\nimport \"antd/dist/antd.css\";\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}